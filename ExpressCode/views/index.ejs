<!DOCTYPE html>
<html>
<head>
	<title>Main</title>
    <script src="https://www.gstatic.com/charts/loader.js"></script>
    <script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>
    <script>
    	google.charts.load('current', {'packages':['treemap']});
		google.charts.setOnLoadCallback(drawChart);

    	setInterval(() => {
    		change()
    	}, 3000);

    	function change() {		// 렌더링 데이터 호출 후 draw chart
    		$('#resultDiv').load(window.location.href + ' #resultDiv');	// rendering data reload
    		drawChart();
		}

    	function getData() {	// 서버에서 수신한 데이터 호출
    		var host = document.getElementById('hostValue');
    		var cate = document.getElementById('cateValue');

    		host = host.innerText.split(',');
    		cate = cate.innerText.split(',');

    		return  {
    			host,
    			cate
    		};
    	}

    	function setData() {	// Column, 상위 Category 정의
    		var data = new google.visualization.DataTable();

	    	var setTableRowData = [
	            ['App', null, 0, 0],

	            ['미분류', 'App', 0, 0],
	            ['우회접속', 'App', 0, 0],
	            ['P2P', 'App', 0, 0],
	            ['원격제어', 'App', 0, 0],
	            ['메신저', 'App', 0, 0],

	            ['PureVPN', '우회접속', 0, 0],
	            ['UltraSurf', '우회접속', 0, 0],
	            ['Browsec', '우회접속', 0, 0],
	            ['QQdownload', '우회접속', 0, 0],

	            ['Fileguri', 'P2P', 0, 0],
	            ['Filenara', 'P2P', 0, 0],
	            ['Orangefile', 'P2P', 0, 0],

	            ['NateOn_Remote', '원격제어', 0, 0],
	            ['Radmin', '원격제어', 0, 0],
	            ['TeamViewer', '원격제어', 0, 0],
	            ['LogMeIn', '원격제어', 0, 0],
	            ['Zook', '원격제어', 0, 0],
	            ['Remotecall', '원격제어', 0, 0],
	    	];

            data.addColumn('string', 'Name');
            data.addColumn('string', 'Category');
            data.addColumn('number', 'size');
            data.addColumn('number', 'color');

            data.addRows(setTableRowData);	// set default category

    		return data;
    	}

    	function drawChart() {
			var data = setData();

			var render = getData();
    		var host = render.host;
    		var cate = render.cate;
        	var hostLen = host.length;

        	var addDatas = [];

            var options = {
                minColor: '#b7be7e',
                midColor: '#f7d374',
                maxColor: '#c25b5d',
                generateTooltip: showStaticTooltip,
                maxDepth: 2,
                headerHeight: 15,
                width: 900,
                height: 500,

                showScale: true,	// 차트 상단 그라데이션 스케일
            };

            function showStaticTooltip(row, size, value) {
                return '<div style="background-color: rgba(255, 255, 255, 0.5); padding:10px; border-style:solid; width: 250px;">' +
                '<span style="font-family:Courier"><b>' + data.getValue(row, 0) + '</b><br>' + '[Category] ' + data.getValue(row, 1) + 
                '<br>[Cell size] ' + data.getValue(row, 2) + '<br>[RISK] ' + data.getValue(row, 3) + '<br>' + data.getColumnLabel(2) + size + '<br>' + ' </div>';
            }

    		tree = new google.visualization.TreeMap(document.getElementById('chart_div'));

            if (host[0] != '') {	// 전달되는 호스트가 있는 경우
            	var hSize = [];
            	var hRisk = [];

            	for (var i = 0; i < hostLen; i++) {
            		hSize[i] = 1;
            		hRisk[i] = 1;
            	}

            	for (var i = 0; i < hostLen; i++) {
            		for (var j = 0; j < i; j++) {
            			if (host[i] == host[j] && cate[i] == cate[j] && host[i] != undefined) {
            				delete host[i];

            				hSize[j]++;
            				hRisk[j]++;
            			}
            		}
            	}

            	for (var i = 0; i < hostLen; i++) {
            		addDatas[i] = [host[i], cate[i], hSize[i], hRisk[i]];
            	}

            	data.addRows(addDatas);

            	tree.draw(data, options);

            } else {	// no draw chart
            	console.log('no data');
            	return;
            }

    	}
    </script>
</head>
<body>
	<h1>Main Page</h1>
	<div id="chart_div"></div>
	<div id="resultDiv">
		<div id="dateValue" style="display: none;"><%= date %></div>
		<div id="hostValue" style="display: none;"><%= host %></div>
		<div id="cateValue" style="display: none;"><%= cate %></div>
	</div>
	<!-- <input type="button" value="test" onclick="change()"> -->
</body>
</html>